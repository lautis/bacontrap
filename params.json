{"name":"Bacontrap","tagline":"Keyboard shortcuts with Bacon.js","body":"[![Build Status](https://img.shields.io/travis/lautis/bacontrap/master.svg)](https://travis-ci.org/lautis/bacontrap)\r\n\r\n[Mousetrap](https://github.com/ccampbell/mousetrap) inspired keyboard\r\nshortcuts implemented with [Bacon.js](https://github.com/raimohanska/bacon.js).\r\n\r\nUnlike Mousetrap, Bacontrap is not a standalone library: Bacon.js and\r\njQuery/Zepto are dependencies. Since these provide functionality for\r\nBacontrap, the library itself is even smaller than Mousetrap.\r\n\r\n## Installation\r\n\r\nDownload the latest [generated\r\njavascript](https://github.com/lautis/bacontrap/raw/master/bacontrap.js) and\r\ninclude it in your app. JQuery and Bacon.js also need to be included on the page.\r\n\r\nOr, if you're using Bower:\r\n\r\n    $ bower install bacontrap\r\n\r\n## Usage\r\n\r\n```javascript\r\nBacontrap.bind('4').onValue(function() { console.log('4'); });\r\nBacontrap.bind('?').onValue(function() { console.log('show shortcuts!'); });\r\nBacontrap.bind('esc').onValue({ console.log('escape'); });\r\n\r\n// combinations\r\nBacontrap.bind('command+shift+k').onValue(function() { console.log('command shift k'); });\r\n\r\nBacontrap.bind(['command+k', 'ctrl+k']).onValue(function(event) {\r\n  console.log('command k or control k');\r\n\r\n  // prevent default browser behaviour\r\n  event.preventDefault();\r\n  // and stop event from bubbling\r\n  event.stopPropagation();\r\n  // return value is used by Bacon to control stream end\r\n  return Bacon.more;\r\n});\r\n\r\n// gmail style sequences\r\nBacontrap.bind('g i').onValue(function() { console.log('go to inbox'); });\r\nBacontrap.bind('* a').onValue(function() { console.log('select all'); });\r\n\r\n// shift+letter = LETTER\r\nBacontrap.bind('G').onValue(function() { console.log('shift+g'); });\r\nBacontrap.bind('shift+g').onValue(function() { console.log('also triggered'); });\r\n\r\n// konami code!\r\nBacontrap.bind('up up down down left right left right b a enter').onValue(function() {\r\n  console.log('konami code');\r\n});\r\n```\r\n\r\n## Hacking\r\n\r\nThe build process runs on [gulp](http://gulpjs.com). Assuming npm is installed,\r\ndependencies can be installed by running\r\n\r\n    $ npm install\r\n\r\nAfter that, you can run use local gulp from `./node_modules/.bin/gulp` or\r\nhave it installed globally with\r\n\r\n    $ npm install -g gulp\r\n\r\nBefore running tests, install browser-side dependencies via Bower\r\n\r\n    $ gulp bower\r\n\r\nThen you should be able to run tests with\r\n\r\n    $ gulp test\r\n\r\nTo continously run tests after file changes use\r\n\r\n    $ gulp\r\n\r\nThere's also a gulp task for compiling distributable JS files.\r\n\r\n    $ gulp dist\r\n\r\n## TODO\r\n\r\n* Test with Internet Explorer\r\n* Escape as modifier key\r\n* Maybe support for different key events (keydown/keyup)\r\n* Keyboard shortcuts using cmd/ctrl are not triggered on Google Chrome, but using\r\nthese is probably a bad idea anyway\r\n* Pressing modifier keys do not interrupt shortcut sequences\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}